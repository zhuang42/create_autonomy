<launch>
  <arg name="robot_id"  default="$(optenv ID 1)"      doc="Unique identifier of the robot [1-Inf.)"/>
  <arg name="ns"        value="create$(arg robot_id)" doc="Namespace of the robot. By default: create1"/>
  <arg name="tf_prefix" value="$(arg ns)_tf"          doc="Tf prefix"/>

  <arg name="use_nodelets"    default="false" />
  <arg name="nodelet_manager" default="$optenv robot_localization_NODELET_MANAGER robot_localization_nodelet_manager)" />

  <remap from="set_pose" to="amcl_pose"/>

  <node unless="$(arg use_nodelets)"
        pkg="robot_localization" type="ekf_localization_node"
        name="ekf_se" clear_params="true" output="screen">
    <rosparam command="load" file="$(find ca_localization)/config/ekf_localization.yaml"/>
    <rosparam command="load" file="$(find ca_localization)/config/ekf_odom.yaml"/>
    <rosparam command="load" file="$(find ca_localization)/config/ekf_imu.yaml"/>
    <!-- <rosparam command="load" file="$(find ca_localization)/config/ekf_scan_matcher.yaml"/> -->
    <!-- <rosparam command="load" file="$(find ca_localization)/config/ekf_angle.yaml"/> -->

    <!--
      The filter accepts an arbitrary number of inputs from each input message type
      (nav_msgs/Odometry, geometry_msgs/PoseWithCovarianceStamped,
      geometry_msgs/TwistWithCovarianceStamped, sensor_msgs/Imu). To add an input,
      simply append the next number in the sequence to its "base" name, e.g., odom0, odom1,
      twist0, twist1, imu0, imu1, imu2, etc. The value should be the topic name.
      These parameters obviously have no default values, and must be specified.
     -->
    <param name="odom0" value="odom"/>
    <param name="imu0"  value="imu/data"/>

    <remap from="odometry/filtered" to="odom_combined"/>

    <param name="odom_frame"      value="odom"/>
    <param name="base_link_frame" value="base_footprint"/>
    <param name="world_frame"     value="odom"/>
  </node>

  <!-- <node if="$(arg use_nodelets)"
        pkg="nodelet" type="nodelet" name="ekf_se" output="screen"
        args="load RobotLocalization/EkfNodelet $(arg nodelet_manager)">
    <rosparam command="load" file="$(find ca_localization)/config/ekf_localization.yaml"/>
    <rosparam command="load" file="$(find ca_localization)/config/ekf_odom.yaml"/>
    <rosparam command="load" file="$(find ca_localization)/config/ekf_angle.yaml"/>
    <rosparam command="load" file="$(find ca_localization)/config/ekf_imu.yaml"/>
  </node> -->

  <!-- RViz -->
  <arg name="rviz" default="false"/>
  <include if="$(arg rviz)" file="$(find ca_tools)/launch/rviz.launch"/>

  <!--  Start laser odometry node  -->
  <!-- https://wiki.ros.org/laser_scan_matcher -->
  <!-- <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
    <param name="fixed_frame" value = "$(arg tf_prefix)/odom"/>
    <param name="base_frame" value="$(arg tf_prefix)/base_footprint"/>
    <param name="publish_tf" value="false"/>
    <param name="publish_pose_with_covariance_stamped" value="true"/>
    <param name="max_iterations" value="10"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="true"/>
    <param name="angle_compensate" value="true"/>
    <remap from="pose_with_covariance_stamped" to="scan_match_pose"/>
    <remap from="pose2D"   to="scan_match_pose2d"/>
    <remap from="imu/data" to="/android/phone1/imu"/>
    <remap from="scan"     to="/create1/rplidar/scan"/>
  </node> -->
</launch>
